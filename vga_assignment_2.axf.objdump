
/home/apunj/Desktop/EEC181/lab3/vga_assignment_2.axf:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__cs3_interrupt_vector>:
   0:	18 f0 9f e5 18 f0 9f e5 18 f0 9f e5 18 f0 9f e5     ................
  10:	18 f0 9f e5 18 f0 9f e5 18 f0 9f e5 18 f0 9f e5     ................
  20:	40 00 00 00 ec 09 00 00 f0 09 00 00 f4 09 00 00     @...............
  30:	f8 09 00 00 e8 09 00 00 fc 09 00 00 00 0a 00 00     ................

00000040 <__cs3_reset>:
  40:	ea000024 	b	d8 <__cs3_start_asm_sim>

00000044 <__cs3_start_c>:
  44:	e59f8084 	ldr	r8, [pc, #132]	; d0 <__cs3_start_c+0x8c>
  48:	e3580000 	cmp	r8, #0
  4c:	e92d4080 	push	{r7, lr}
  50:	e2488001 	sub	r8, r8, #1
  54:	0a00001c 	beq	cc <__cs3_start_c+0x88>
  58:	e59f7074 	ldr	r7, [pc, #116]	; d4 <__cs3_start_c+0x90>
  5c:	e3a00000 	mov	r0, #0
  60:	e3a01000 	mov	r1, #0
  64:	e2475010 	sub	r5, r7, #16
  68:	e8951020 	ldm	r5, {r5, r12}
  6c:	e5176008 	ldr	r6, [r7, #-8]
  70:	e155000c 	cmp	r5, r12
  74:	008cc006 	addeq	r12, r12, r6
  78:	0a000007 	beq	9c <__cs3_start_c+0x58>
  7c:	e3560000 	cmp	r6, #0
  80:	0a000005 	beq	9c <__cs3_start_c+0x58>
  84:	e1a0e005 	mov	lr, r5
  88:	e8be000c 	ldm	lr!, {r2, r3}
  8c:	e065400e 	rsb	r4, r5, lr
  90:	e1560004 	cmp	r6, r4
  94:	e8ac000c 	stmia	r12!, {r2, r3}
  98:	1afffffa 	bne	88 <__cs3_start_c+0x44>
  9c:	e517e004 	ldr	lr, [r7, #-4]
  a0:	e35e0000 	cmp	lr, #0
  a4:	11a0300c 	movne	r3, r12
  a8:	0a000003 	beq	bc <__cs3_start_c+0x78>
  ac:	e8a30003 	stmia	r3!, {r0, r1}
  b0:	e06c2003 	rsb	r2, r12, r3
  b4:	e15e0002 	cmp	lr, r2
  b8:	1afffffb 	bne	ac <__cs3_start_c+0x68>
  bc:	e2488001 	sub	r8, r8, #1
  c0:	e3780001 	cmn	r8, #1
  c4:	e2877014 	add	r7, r7, #20
  c8:	1affffe5 	bne	64 <__cs3_start_c+0x20>
  cc:	eb00022c 	bl	984 <__cs3_premain>
  d0:	00000001 	.word	0x00000001
  d4:	00000bdc 	.word	0x00000bdc

000000d8 <__cs3_start_asm_sim>:
  d8:	e28f103c 	add	r1, pc, #60	; 0x3c
  dc:	e3a00016 	mov	r0, #22
  e0:	ef123456 	svc	0x00123456
  e4:	e3500000 	cmp	r0, #0
  e8:	ba000008 	blt	110 <__cs3_start_asm_sim+0x38>
  ec:	e59f2028 	ldr	r2, [pc, #40]	; 11c <__cs3_heap_start_ptr>
  f0:	e59fd01c 	ldr	sp, [pc, #28]	; 114 <__cs3_start_asm_sim+0x3c>
  f4:	e5920008 	ldr	r0, [r2, #8]
  f8:	e3500000 	cmp	r0, #0
  fc:	11a0d000 	movne	sp, r0
 100:	e59f1010 	ldr	r1, [pc, #16]	; 118 <__cs3_start_asm_sim+0x40>
 104:	e5920004 	ldr	r0, [r2, #4]
 108:	e3500000 	cmp	r0, #0
 10c:	15810000 	strne	r0, [r1]
 110:	eaffffcb 	b	44 <__cs3_start_c>
 114:	3ffffffc 	.word	0x3ffffffc
 118:	00001018 	.word	0x00001018

0000011c <__cs3_heap_start_ptr>:
 11c:	00001040 	.word	0x00001040

00000120 <_start>:
 120:	e51fd000 	ldr	sp, [pc, #-0]	; 128 <_start+0x8>
 124:	eaffffc6 	b	44 <__cs3_start_c>
 128:	3ffffffc 	.word	0x3ffffffc

0000012c <deregister_tm_clones>:
 12c:	e92d4008 	push	{r3, lr}
 130:	e59f002c 	ldr	r0, [pc, #44]	; 164 <deregister_tm_clones+0x38>
 134:	e59f302c 	ldr	r3, [pc, #44]	; 168 <deregister_tm_clones+0x3c>
 138:	e0603003 	rsb	r3, r0, r3
 13c:	e3530006 	cmp	r3, #6
 140:	8a000001 	bhi	14c <deregister_tm_clones+0x20>
 144:	e8bd4008 	pop	{r3, lr}
 148:	e12fff1e 	bx	lr
 14c:	e59f3018 	ldr	r3, [pc, #24]	; 16c <deregister_tm_clones+0x40>
 150:	e3530000 	cmp	r3, #0
 154:	0afffffa 	beq	144 <deregister_tm_clones+0x18>
 158:	e1a0e00f 	mov	lr, pc
 15c:	e12fff13 	bx	r3
 160:	eafffff7 	b	144 <deregister_tm_clones+0x18>
 164:	00001020 	.word	0x00001020
 168:	00001023 	.word	0x00001023
 16c:	00000000 	.word	0x00000000

00000170 <register_tm_clones>:
 170:	e92d4008 	push	{r3, lr}
 174:	e59f0034 	ldr	r0, [pc, #52]	; 1b0 <register_tm_clones+0x40>
 178:	e59f3034 	ldr	r3, [pc, #52]	; 1b4 <register_tm_clones+0x44>
 17c:	e0603003 	rsb	r3, r0, r3
 180:	e1a03143 	asr	r3, r3, #2
 184:	e0833fa3 	add	r3, r3, r3, lsr #31
 188:	e1b010c3 	asrs	r1, r3, #1
 18c:	1a000001 	bne	198 <register_tm_clones+0x28>
 190:	e8bd4008 	pop	{r3, lr}
 194:	e12fff1e 	bx	lr
 198:	e59f2018 	ldr	r2, [pc, #24]	; 1b8 <register_tm_clones+0x48>
 19c:	e3520000 	cmp	r2, #0
 1a0:	0afffffa 	beq	190 <register_tm_clones+0x20>
 1a4:	e1a0e00f 	mov	lr, pc
 1a8:	e12fff12 	bx	r2
 1ac:	eafffff7 	b	190 <register_tm_clones+0x20>
 1b0:	00001020 	.word	0x00001020
 1b4:	00001020 	.word	0x00001020
 1b8:	00000000 	.word	0x00000000

000001bc <__do_global_dtors_aux>:
 1bc:	e92d4010 	push	{r4, lr}
 1c0:	e59f402c 	ldr	r4, [pc, #44]	; 1f4 <__do_global_dtors_aux+0x38>
 1c4:	e5d43000 	ldrb	r3, [r4]
 1c8:	e3530000 	cmp	r3, #0
 1cc:	1a000006 	bne	1ec <__do_global_dtors_aux+0x30>
 1d0:	ebffffd5 	bl	12c <deregister_tm_clones>
 1d4:	e59f301c 	ldr	r3, [pc, #28]	; 1f8 <__do_global_dtors_aux+0x3c>
 1d8:	e3530000 	cmp	r3, #0
 1dc:	159f0018 	ldrne	r0, [pc, #24]	; 1fc <__do_global_dtors_aux+0x40>
 1e0:	1320f000 	nopne	{0}
 1e4:	e3a03001 	mov	r3, #1
 1e8:	e5c43000 	strb	r3, [r4]
 1ec:	e8bd4010 	pop	{r4, lr}
 1f0:	e12fff1e 	bx	lr
 1f4:	00001020 	.word	0x00001020
 1f8:	00000000 	.word	0x00000000
 1fc:	00000a8c 	.word	0x00000a8c

00000200 <frame_dummy>:
 200:	e92d4008 	push	{r3, lr}
 204:	e59f3034 	ldr	r3, [pc, #52]	; 240 <frame_dummy+0x40>
 208:	e3530000 	cmp	r3, #0
 20c:	159f0030 	ldrne	r0, [pc, #48]	; 244 <frame_dummy+0x44>
 210:	159f1030 	ldrne	r1, [pc, #48]	; 248 <frame_dummy+0x48>
 214:	1320f000 	nopne	{0}
 218:	e59f002c 	ldr	r0, [pc, #44]	; 24c <frame_dummy+0x4c>
 21c:	e5903000 	ldr	r3, [r0]
 220:	e3530000 	cmp	r3, #0
 224:	0a000003 	beq	238 <frame_dummy+0x38>
 228:	e59f3020 	ldr	r3, [pc, #32]	; 250 <frame_dummy+0x50>
 22c:	e3530000 	cmp	r3, #0
 230:	11a0e00f 	movne	lr, pc
 234:	112fff13 	bxne	r3
 238:	e8bd4008 	pop	{r3, lr}
 23c:	eaffffcb 	b	170 <register_tm_clones>
 240:	00000000 	.word	0x00000000
 244:	00000a8c 	.word	0x00000a8c
 248:	00001024 	.word	0x00001024
 24c:	00000be0 	.word	0x00000be0
 250:	00000000 	.word	0x00000000

00000254 <VGA_text>:
void VGA_text(int x, int y, char * text_ptr){
 254:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
 258:	e28db000 	add	r11, sp, #0
 25c:	e24dd01c 	sub	sp, sp, #28
 260:	e50b0010 	str	r0, [r11, #-16]
 264:	e50b1014 	str	r1, [r11, #-20]	; 0xffffffec
 268:	e50b2018 	str	r2, [r11, #-24]	; 0xffffffe8
	int offset;
	volatile char * character_buffer = (char *) 0xC4004000;
 26c:	e3a03901 	mov	r3, #16384	; 0x4000
 270:	e34c3400 	movt	r3, #50176	; 0xc400
 274:	e50b300c 	str	r3, [r11, #-12]
	offset = (y<<7)+x;
 278:	e51b3014 	ldr	r3, [r11, #-20]	; 0xffffffec
 27c:	e1a02383 	lsl	r2, r3, #7
 280:	e51b3010 	ldr	r3, [r11, #-16]
 284:	e0823003 	add	r3, r2, r3
 288:	e50b3008 	str	r3, [r11, #-8]
	while(*(text_ptr)){
 28c:	ea00000b 	b	2c0 <VGA_text+0x6c>
		*(character_buffer+offset)=*(text_ptr);
 290:	e51b3008 	ldr	r3, [r11, #-8]
 294:	e51b200c 	ldr	r2, [r11, #-12]
 298:	e0823003 	add	r3, r2, r3
 29c:	e51b2018 	ldr	r2, [r11, #-24]	; 0xffffffe8
 2a0:	e5d22000 	ldrb	r2, [r2]
 2a4:	e5c32000 	strb	r2, [r3]
		++text_ptr;
 2a8:	e51b3018 	ldr	r3, [r11, #-24]	; 0xffffffe8
 2ac:	e2833001 	add	r3, r3, #1
 2b0:	e50b3018 	str	r3, [r11, #-24]	; 0xffffffe8
		++offset;
 2b4:	e51b3008 	ldr	r3, [r11, #-8]
 2b8:	e2833001 	add	r3, r3, #1
 2bc:	e50b3008 	str	r3, [r11, #-8]
void VGA_text(int x, int y, char * text_ptr){
	int offset;
	volatile char * character_buffer = (char *) 0xC4004000;
	offset = (y<<7)+x;
	while(*(text_ptr)){
 2c0:	e51b3018 	ldr	r3, [r11, #-24]	; 0xffffffe8
 2c4:	e5d33000 	ldrb	r3, [r3]
 2c8:	e3530000 	cmp	r3, #0
 2cc:	1affffef 	bne	290 <VGA_text+0x3c>
		*(character_buffer+offset)=*(text_ptr);
		++text_ptr;
		++offset;
	}
}
 2d0:	e24bd000 	sub	sp, r11, #0
 2d4:	e49db004 	pop	{r11}		; (ldr r11, [sp], #4)
 2d8:	e12fff1e 	bx	lr

000002dc <VGA_box>:

void VGA_box(int x1, int y1, int x2, int y2, short pixel_color){
 2dc:	e52db004 	push	{r11}		; (str r11, [sp, #-4]!)
 2e0:	e28db000 	add	r11, sp, #0
 2e4:	e24dd024 	sub	sp, sp, #36	; 0x24
 2e8:	e50b0018 	str	r0, [r11, #-24]	; 0xffffffe8
 2ec:	e50b101c 	str	r1, [r11, #-28]	; 0xffffffe4
 2f0:	e50b2020 	str	r2, [r11, #-32]	; 0xffffffe0
 2f4:	e50b3024 	str	r3, [r11, #-36]	; 0xffffffdc
	int offset, row, col;
	//vga sdram location address base addr is 0x00000000 in qsys
	volatile short * pixel_buffer = (short *) 0xC0000000;
 2f8:	e3a03103 	mov	r3, #-1073741824	; 0xc0000000
 2fc:	e50b3010 	str	r3, [r11, #-16]
	for (row=y1; row<=y2; row++){
 300:	e51b301c 	ldr	r3, [r11, #-28]	; 0xffffffe4
 304:	e50b3008 	str	r3, [r11, #-8]
 308:	ea000017 	b	36c <VGA_box+0x90>
		for (col = x1; col<=x2; ++col){
 30c:	e51b3018 	ldr	r3, [r11, #-24]	; 0xffffffe8
 310:	e50b300c 	str	r3, [r11, #-12]
 314:	ea00000d 	b	350 <VGA_box+0x74>
			offset=(row << 9)+col;
 318:	e51b3008 	ldr	r3, [r11, #-8]
 31c:	e1a02483 	lsl	r2, r3, #9
 320:	e51b300c 	ldr	r3, [r11, #-12]
 324:	e0823003 	add	r3, r2, r3
 328:	e50b3014 	str	r3, [r11, #-20]	; 0xffffffec
			*(pixel_buffer+offset)=pixel_color;
 32c:	e51b3014 	ldr	r3, [r11, #-20]	; 0xffffffec
 330:	e1a03083 	lsl	r3, r3, #1
 334:	e51b2010 	ldr	r2, [r11, #-16]
 338:	e0823003 	add	r3, r2, r3
 33c:	e1db20b4 	ldrh	r2, [r11, #4]
 340:	e1c320b0 	strh	r2, [r3]
void VGA_box(int x1, int y1, int x2, int y2, short pixel_color){
	int offset, row, col;
	//vga sdram location address base addr is 0x00000000 in qsys
	volatile short * pixel_buffer = (short *) 0xC0000000;
	for (row=y1; row<=y2; row++){
		for (col = x1; col<=x2; ++col){
 344:	e51b300c 	ldr	r3, [r11, #-12]
 348:	e2833001 	add	r3, r3, #1
 34c:	e50b300c 	str	r3, [r11, #-12]
 350:	e51b200c 	ldr	r2, [r11, #-12]
 354:	e51b3020 	ldr	r3, [r11, #-32]	; 0xffffffe0
 358:	e1520003 	cmp	r2, r3
 35c:	daffffed 	ble	318 <VGA_box+0x3c>

void VGA_box(int x1, int y1, int x2, int y2, short pixel_color){
	int offset, row, col;
	//vga sdram location address base addr is 0x00000000 in qsys
	volatile short * pixel_buffer = (short *) 0xC0000000;
	for (row=y1; row<=y2; row++){
 360:	e51b3008 	ldr	r3, [r11, #-8]
 364:	e2833001 	add	r3, r3, #1
 368:	e50b3008 	str	r3, [r11, #-8]
 36c:	e51b2008 	ldr	r2, [r11, #-8]
 370:	e51b3024 	ldr	r3, [r11, #-36]	; 0xffffffdc
 374:	e1520003 	cmp	r2, r3
 378:	daffffe3 	ble	30c <VGA_box+0x30>
		for (col = x1; col<=x2; ++col){
			offset=(row << 9)+col;
			*(pixel_buffer+offset)=pixel_color;
		}
	}
}
 37c:	e24bd000 	sub	sp, r11, #0
 380:	e49db004 	pop	{r11}		; (ldr r11, [sp], #4)
 384:	e12fff1e 	bx	lr

00000388 <main>:

int main(void){
 388:	e92d4800 	push	{r11, lr}
 38c:	e28db004 	add	r11, sp, #4
 390:	e24dd080 	sub	sp, sp, #128	; 0x80
	char text_top_row[50]="Hello World\0";
 394:	e3003b1c 	movw	r3, #2844	; 0xb1c
 398:	e3403000 	movt	r3, #0
 39c:	e24bc048 	sub	r12, r11, #72	; 0x48
 3a0:	e893000f 	ldm	r3, {r0, r1, r2, r3}
 3a4:	e8ac0007 	stmia	r12!, {r0, r1, r2}
 3a8:	e5cc3000 	strb	r3, [r12]
 3ac:	e24b203b 	sub	r2, r11, #59	; 0x3b
 3b0:	e3a03025 	mov	r3, #37	; 0x25
 3b4:	e1a00002 	mov	r0, r2
 3b8:	e3a01000 	mov	r1, #0
 3bc:	e1a02003 	mov	r2, r3
 3c0:	eb00007f 	bl	5c4 <memset>
	char text_bottom_row[50]="My name is TEAM BO my favorite class is EEC181.\0";
 3c4:	e3003b50 	movw	r3, #2896	; 0xb50
 3c8:	e3403000 	movt	r3, #0
 3cc:	e24bc07c 	sub	r12, r11, #124	; 0x7c
 3d0:	e1a0e003 	mov	lr, r3
 3d4:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
 3d8:	e8ac000f 	stmia	r12!, {r0, r1, r2, r3}
 3dc:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
 3e0:	e8ac000f 	stmia	r12!, {r0, r1, r2, r3}
 3e4:	e8be000f 	ldm	lr!, {r0, r1, r2, r3}
 3e8:	e8ac000f 	stmia	r12!, {r0, r1, r2, r3}
 3ec:	e59e3000 	ldr	r3, [lr]
 3f0:	e5cc3000 	strb	r3, [r12]
 3f4:	e3a03000 	mov	r3, #0
 3f8:	e54b304b 	strb	r3, [r11, #-75]	; 0xffffffb5
	int verticalPos=29;
 3fc:	e3a0301d 	mov	r3, #29
 400:	e50b3008 	str	r3, [r11, #-8]
	VGA_text (35,verticalPos,text_top_row);
 404:	e24b3048 	sub	r3, r11, #72	; 0x48
 408:	e3a00023 	mov	r0, #35	; 0x23
 40c:	e51b1008 	ldr	r1, [r11, #-8]
 410:	e1a02003 	mov	r2, r3
 414:	ebffff8e 	bl	254 <VGA_text>
	VGA_text (15, verticalPos+1, text_bottom_row);
 418:	e51b3008 	ldr	r3, [r11, #-8]
 41c:	e2832001 	add	r2, r3, #1
 420:	e24b307c 	sub	r3, r11, #124	; 0x7c
 424:	e3a0000f 	mov	r0, #15
 428:	e1a01002 	mov	r1, r2
 42c:	e1a02003 	mov	r2, r3
 430:	ebffff87 	bl	254 <VGA_text>
	VGA_box (0,0,80*4+1,80*5,0x00f);//display pixel x:0 to 319, 16 bit rgb
 434:	e3a0300f 	mov	r3, #15
 438:	e58d3000 	str	r3, [sp]
 43c:	e3a00000 	mov	r0, #0
 440:	e3a01000 	mov	r1, #0
 444:	e3002141 	movw	r2, #321	; 0x141
 448:	e3a03e19 	mov	r3, #400	; 0x190
 44c:	ebffffa2 	bl	2dc <VGA_box>
	VGA_box (1*4-2,25*5,79*4+1,32*5,0xe0f);//display pixel x:0 to 319, 16 bit rgb
 450:	e3003e0f 	movw	r3, #3599	; 0xe0f
 454:	e58d3000 	str	r3, [sp]
 458:	e3a00002 	mov	r0, #2
 45c:	e3a0107d 	mov	r1, #125	; 0x7d
 460:	e300213d 	movw	r2, #317	; 0x13d
 464:	e3a030a0 	mov	r3, #160	; 0xa0
 468:	ebffff9b 	bl	2dc <VGA_box>

	int topDown=0;
 46c:	e3a03000 	mov	r3, #0
 470:	e50b300c 	str	r3, [r11, #-12]
	int i;
	int useless=0;
 474:	e3a03000 	mov	r3, #0
 478:	e50b3014 	str	r3, [r11, #-20]	; 0xffffffec
	while(1){
		VGA_text (10,verticalPos, "                                                                   ");
 47c:	e3a0000a 	mov	r0, #10
 480:	e51b1008 	ldr	r1, [r11, #-8]
 484:	e3002a90 	movw	r2, #2704	; 0xa90
 488:	e3402000 	movt	r2, #0
 48c:	ebffff70 	bl	254 <VGA_text>
		VGA_text (10, verticalPos+1, "                                                                       ");
 490:	e51b3008 	ldr	r3, [r11, #-8]
 494:	e2833001 	add	r3, r3, #1
 498:	e3a0000a 	mov	r0, #10
 49c:	e1a01003 	mov	r1, r3
 4a0:	e3002ad4 	movw	r2, #2772	; 0xad4
 4a4:	e3402000 	movt	r2, #0
 4a8:	ebffff69 	bl	254 <VGA_text>
		if(topDown==0)
 4ac:	e51b300c 	ldr	r3, [r11, #-12]
 4b0:	e3530000 	cmp	r3, #0
 4b4:	1a000003 	bne	4c8 <main+0x140>
			verticalPos++;
 4b8:	e51b3008 	ldr	r3, [r11, #-8]
 4bc:	e2833001 	add	r3, r3, #1
 4c0:	e50b3008 	str	r3, [r11, #-8]
 4c4:	ea000002 	b	4d4 <main+0x14c>
		else 
			verticalPos=verticalPos-1;
 4c8:	e51b3008 	ldr	r3, [r11, #-8]
 4cc:	e2433001 	sub	r3, r3, #1
 4d0:	e50b3008 	str	r3, [r11, #-8]
		//topDown=0, move the text down, =1 move it up
		if(verticalPos==50)
 4d4:	e51b3008 	ldr	r3, [r11, #-8]
 4d8:	e3530032 	cmp	r3, #50	; 0x32
 4dc:	1a000001 	bne	4e8 <main+0x160>
			topDown=1;
 4e0:	e3a03001 	mov	r3, #1
 4e4:	e50b300c 	str	r3, [r11, #-12]
		if(verticalPos==10)
 4e8:	e51b3008 	ldr	r3, [r11, #-8]
 4ec:	e353000a 	cmp	r3, #10
 4f0:	1a000001 	bne	4fc <main+0x174>
			topDown=0;
 4f4:	e3a03000 	mov	r3, #0
 4f8:	e50b300c 	str	r3, [r11, #-12]
	//	VGA_box (1*4-2,28*5,79*4+1,32*5,0x00f);
		VGA_text (35,verticalPos,text_top_row);
 4fc:	e24b3048 	sub	r3, r11, #72	; 0x48
 500:	e3a00023 	mov	r0, #35	; 0x23
 504:	e51b1008 	ldr	r1, [r11, #-8]
 508:	e1a02003 	mov	r2, r3
 50c:	ebffff50 	bl	254 <VGA_text>
		VGA_text (15, verticalPos+1, text_bottom_row);
 510:	e51b3008 	ldr	r3, [r11, #-8]
 514:	e2832001 	add	r2, r3, #1
 518:	e24b307c 	sub	r3, r11, #124	; 0x7c
 51c:	e3a0000f 	mov	r0, #15
 520:	e1a01002 	mov	r1, r2
 524:	e1a02003 	mov	r2, r3
 528:	ebffff49 	bl	254 <VGA_text>
		for(i=0;i<1000000;i++){
 52c:	e3a03000 	mov	r3, #0
 530:	e50b3010 	str	r3, [r11, #-16]
 534:	ea000007 	b	558 <main+0x1d0>
			useless++;
 538:	e51b3014 	ldr	r3, [r11, #-20]	; 0xffffffec
 53c:	e2833001 	add	r3, r3, #1
 540:	e50b3014 	str	r3, [r11, #-20]	; 0xffffffec
			useless=useless*0;
 544:	e3a03000 	mov	r3, #0
 548:	e50b3014 	str	r3, [r11, #-20]	; 0xffffffec
		if(verticalPos==10)
			topDown=0;
	//	VGA_box (1*4-2,28*5,79*4+1,32*5,0x00f);
		VGA_text (35,verticalPos,text_top_row);
		VGA_text (15, verticalPos+1, text_bottom_row);
		for(i=0;i<1000000;i++){
 54c:	e51b3010 	ldr	r3, [r11, #-16]
 550:	e2833001 	add	r3, r3, #1
 554:	e50b3010 	str	r3, [r11, #-16]
 558:	e51b2010 	ldr	r2, [r11, #-16]
 55c:	e304323f 	movw	r3, #16959	; 0x423f
 560:	e340300f 	movt	r3, #15
 564:	e1520003 	cmp	r2, r3
 568:	dafffff2 	ble	538 <main+0x1b0>
			useless++;
			useless=useless*0;
		}
	}
 56c:	eaffffc2 	b	47c <main+0xf4>

00000570 <atexit>:
 570:	e92d4008 	push	{r3, lr}
 574:	e1a01000 	mov	r1, r0
 578:	e3a00000 	mov	r0, #0
 57c:	e1a03000 	mov	r3, r0
 580:	e1a02000 	mov	r2, r0
 584:	eb00004b 	bl	6b8 <__register_exitproc>
 588:	e8bd4008 	pop	{r3, lr}
 58c:	e12fff1e 	bx	lr

00000590 <exit>:
 590:	e92d4008 	push	{r3, lr}
 594:	e3a01000 	mov	r1, #0
 598:	e1a04000 	mov	r4, r0
 59c:	eb000081 	bl	7a8 <__call_exitprocs>
 5a0:	e59f3018 	ldr	r3, [pc, #24]	; 5c0 <exit+0x30>
 5a4:	e5930000 	ldr	r0, [r3]
 5a8:	e590303c 	ldr	r3, [r0, #60]	; 0x3c
 5ac:	e3530000 	cmp	r3, #0
 5b0:	11a0e00f 	movne	lr, pc
 5b4:	112fff13 	bxne	r3
 5b8:	e1a00004 	mov	r0, r4
 5bc:	eb000103 	bl	9d0 <_exit>
 5c0:	00000b84 	.word	0x00000b84

000005c4 <memset>:
 5c4:	e3100003 	tst	r0, #3
 5c8:	e92d0070 	push	{r4, r5, r6}
 5cc:	0a000037 	beq	6b0 <memset+0xec>
 5d0:	e3520000 	cmp	r2, #0
 5d4:	e2422001 	sub	r2, r2, #1
 5d8:	0a000032 	beq	6a8 <memset+0xe4>
 5dc:	e201c0ff 	and	r12, r1, #255	; 0xff
 5e0:	e1a03000 	mov	r3, r0
 5e4:	ea000002 	b	5f4 <memset+0x30>
 5e8:	e3520000 	cmp	r2, #0
 5ec:	e2422001 	sub	r2, r2, #1
 5f0:	0a00002c 	beq	6a8 <memset+0xe4>
 5f4:	e4c3c001 	strb	r12, [r3], #1
 5f8:	e3130003 	tst	r3, #3
 5fc:	1afffff9 	bne	5e8 <memset+0x24>
 600:	e3520003 	cmp	r2, #3
 604:	9a000020 	bls	68c <memset+0xc8>
 608:	e20140ff 	and	r4, r1, #255	; 0xff
 60c:	e1844404 	orr	r4, r4, r4, lsl #8
 610:	e352000f 	cmp	r2, #15
 614:	e1844804 	orr	r4, r4, r4, lsl #16
 618:	9a000010 	bls	660 <memset+0x9c>
 61c:	e2426010 	sub	r6, r2, #16
 620:	e1a06226 	lsr	r6, r6, #4
 624:	e2835010 	add	r5, r3, #16
 628:	e0855206 	add	r5, r5, r6, lsl #4
 62c:	e1a0c003 	mov	r12, r3
 630:	e58c4000 	str	r4, [r12]
 634:	e58c4004 	str	r4, [r12, #4]
 638:	e58c4008 	str	r4, [r12, #8]
 63c:	e58c400c 	str	r4, [r12, #12]
 640:	e28cc010 	add	r12, r12, #16
 644:	e15c0005 	cmp	r12, r5
 648:	1afffff8 	bne	630 <memset+0x6c>
 64c:	e202200f 	and	r2, r2, #15
 650:	e2866001 	add	r6, r6, #1
 654:	e3520003 	cmp	r2, #3
 658:	e0833206 	add	r3, r3, r6, lsl #4
 65c:	9a00000a 	bls	68c <memset+0xc8>
 660:	e1a05003 	mov	r5, r3
 664:	e1a0c002 	mov	r12, r2
 668:	e24cc004 	sub	r12, r12, #4
 66c:	e35c0003 	cmp	r12, #3
 670:	e4854004 	str	r4, [r5], #4
 674:	8afffffb 	bhi	668 <memset+0xa4>
 678:	e242c004 	sub	r12, r2, #4
 67c:	e3ccc003 	bic	r12, r12, #3
 680:	e28cc004 	add	r12, r12, #4
 684:	e083300c 	add	r3, r3, r12
 688:	e2022003 	and	r2, r2, #3
 68c:	e3520000 	cmp	r2, #0
 690:	120110ff 	andne	r1, r1, #255	; 0xff
 694:	10832002 	addne	r2, r3, r2
 698:	0a000002 	beq	6a8 <memset+0xe4>
 69c:	e4c31001 	strb	r1, [r3], #1
 6a0:	e1530002 	cmp	r3, r2
 6a4:	1afffffc 	bne	69c <memset+0xd8>
 6a8:	e8bd0070 	pop	{r4, r5, r6}
 6ac:	e12fff1e 	bx	lr
 6b0:	e1a03000 	mov	r3, r0
 6b4:	eaffffd1 	b	600 <memset+0x3c>

000006b8 <__register_exitproc>:
 6b8:	e59fc0e0 	ldr	r12, [pc, #224]	; 7a0 <__register_exitproc+0xe8>
 6bc:	e92d4070 	push	{r4, r5, r6, lr}
 6c0:	e59c5000 	ldr	r5, [r12]
 6c4:	e595c148 	ldr	r12, [r5, #328]	; 0x148
 6c8:	e35c0000 	cmp	r12, #0
 6cc:	0285cf53 	addeq	r12, r5, #332	; 0x14c
 6d0:	e59c4004 	ldr	r4, [r12, #4]
 6d4:	0585c148 	streq	r12, [r5, #328]	; 0x148
 6d8:	e354001f 	cmp	r4, #31
 6dc:	e24dd010 	sub	sp, sp, #16
 6e0:	e1a06000 	mov	r6, r0
 6e4:	da000016 	ble	744 <__register_exitproc+0x8c>
 6e8:	e59f00b4 	ldr	r0, [pc, #180]	; 7a4 <__register_exitproc+0xec>
 6ec:	e3500000 	cmp	r0, #0
 6f0:	1a000003 	bne	704 <__register_exitproc+0x4c>
 6f4:	e3e00000 	mvn	r0, #0
 6f8:	e28dd010 	add	sp, sp, #16
 6fc:	e8bd4070 	pop	{r4, r5, r6, lr}
 700:	e12fff1e 	bx	lr
 704:	e3a00e19 	mov	r0, #400	; 0x190
 708:	e58d100c 	str	r1, [sp, #12]
 70c:	e58d2008 	str	r2, [sp, #8]
 710:	e58d3004 	str	r3, [sp, #4]
 714:	e320f000 	nop	{0}
 718:	e250c000 	subs	r12, r0, #0
 71c:	e59d100c 	ldr	r1, [sp, #12]
 720:	e59d2008 	ldr	r2, [sp, #8]
 724:	e59d3004 	ldr	r3, [sp, #4]
 728:	0afffff1 	beq	6f4 <__register_exitproc+0x3c>
 72c:	e5950148 	ldr	r0, [r5, #328]	; 0x148
 730:	e3a04000 	mov	r4, #0
 734:	e88c0011 	stm	r12, {r0, r4}
 738:	e585c148 	str	r12, [r5, #328]	; 0x148
 73c:	e58c4188 	str	r4, [r12, #392]	; 0x188
 740:	e58c418c 	str	r4, [r12, #396]	; 0x18c
 744:	e3560000 	cmp	r6, #0
 748:	1a000007 	bne	76c <__register_exitproc+0xb4>
 74c:	e2843001 	add	r3, r4, #1
 750:	e3a00000 	mov	r0, #0
 754:	e2844002 	add	r4, r4, #2
 758:	e58c3004 	str	r3, [r12, #4]
 75c:	e78c1104 	str	r1, [r12, r4, lsl #2]
 760:	e28dd010 	add	sp, sp, #16
 764:	e8bd4070 	pop	{r4, r5, r6, lr}
 768:	e12fff1e 	bx	lr
 76c:	e3a05001 	mov	r5, #1
 770:	e1a05415 	lsl	r5, r5, r4
 774:	e08c0104 	add	r0, r12, r4, lsl #2
 778:	e5802088 	str	r2, [r0, #136]	; 0x88
 77c:	e59c2188 	ldr	r2, [r12, #392]	; 0x188
 780:	e1822005 	orr	r2, r2, r5
 784:	e58c2188 	str	r2, [r12, #392]	; 0x188
 788:	e5803108 	str	r3, [r0, #264]	; 0x108
 78c:	e3560002 	cmp	r6, #2
 790:	059c318c 	ldreq	r3, [r12, #396]	; 0x18c
 794:	01835005 	orreq	r5, r3, r5
 798:	058c518c 	streq	r5, [r12, #396]	; 0x18c
 79c:	eaffffea 	b	74c <__register_exitproc+0x94>
 7a0:	00000b84 	.word	0x00000b84
 7a4:	00000000 	.word	0x00000000

000007a8 <__call_exitprocs>:
 7a8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
 7ac:	e59f315c 	ldr	r3, [pc, #348]	; 910 <__call_exitprocs+0x168>
 7b0:	e5933000 	ldr	r3, [r3]
 7b4:	e24dd014 	sub	sp, sp, #20
 7b8:	e2832f52 	add	r2, r3, #328	; 0x148
 7bc:	e58d3004 	str	r3, [sp, #4]
 7c0:	e58d0008 	str	r0, [sp, #8]
 7c4:	e58d200c 	str	r2, [sp, #12]
 7c8:	e1a07001 	mov	r7, r1
 7cc:	e3a09001 	mov	r9, #1
 7d0:	e59d3004 	ldr	r3, [sp, #4]
 7d4:	e5938148 	ldr	r8, [r3, #328]	; 0x148
 7d8:	e3580000 	cmp	r8, #0
 7dc:	0a000038 	beq	8c4 <__call_exitprocs+0x11c>
 7e0:	e59db00c 	ldr	r11, [sp, #12]
 7e4:	e5986004 	ldr	r6, [r8, #4]
 7e8:	e2564001 	subs	r4, r6, #1
 7ec:	50885106 	addpl	r5, r8, r6, lsl #2
 7f0:	52866002 	addpl	r6, r6, #2
 7f4:	52855f42 	addpl	r5, r5, #264	; 0x108
 7f8:	50886106 	addpl	r6, r8, r6, lsl #2
 7fc:	5a000008 	bpl	824 <__call_exitprocs+0x7c>
 800:	ea00002c 	b	8b8 <__call_exitprocs+0x110>
 804:	e5153004 	ldr	r3, [r5, #-4]
 808:	e1530007 	cmp	r3, r7
 80c:	0a000006 	beq	82c <__call_exitprocs+0x84>
 810:	e2444001 	sub	r4, r4, #1
 814:	e3740001 	cmn	r4, #1
 818:	e2455004 	sub	r5, r5, #4
 81c:	e2466004 	sub	r6, r6, #4
 820:	0a000024 	beq	8b8 <__call_exitprocs+0x110>
 824:	e3570000 	cmp	r7, #0
 828:	1afffff5 	bne	804 <__call_exitprocs+0x5c>
 82c:	e5983004 	ldr	r3, [r8, #4]
 830:	e2433001 	sub	r3, r3, #1
 834:	e1530004 	cmp	r3, r4
 838:	e5163004 	ldr	r3, [r6, #-4]
 83c:	13a02000 	movne	r2, #0
 840:	05884004 	streq	r4, [r8, #4]
 844:	15062004 	strne	r2, [r6, #-4]
 848:	e3530000 	cmp	r3, #0
 84c:	0affffef 	beq	810 <__call_exitprocs+0x68>
 850:	e1a02419 	lsl	r2, r9, r4
 854:	e5981188 	ldr	r1, [r8, #392]	; 0x188
 858:	e1120001 	tst	r2, r1
 85c:	e598a004 	ldr	r10, [r8, #4]
 860:	0a00000d 	beq	89c <__call_exitprocs+0xf4>
 864:	e598118c 	ldr	r1, [r8, #396]	; 0x18c
 868:	e1120001 	tst	r2, r1
 86c:	1a00000d 	bne	8a8 <__call_exitprocs+0x100>
 870:	e59d0008 	ldr	r0, [sp, #8]
 874:	e5151084 	ldr	r1, [r5, #-132]	; 0xffffff7c
 878:	e1a0e00f 	mov	lr, pc
 87c:	e12fff13 	bx	r3
 880:	e5983004 	ldr	r3, [r8, #4]
 884:	e153000a 	cmp	r3, r10
 888:	1affffd0 	bne	7d0 <__call_exitprocs+0x28>
 88c:	e59b3000 	ldr	r3, [r11]
 890:	e1530008 	cmp	r3, r8
 894:	0affffdd 	beq	810 <__call_exitprocs+0x68>
 898:	eaffffcc 	b	7d0 <__call_exitprocs+0x28>
 89c:	e1a0e00f 	mov	lr, pc
 8a0:	e12fff13 	bx	r3
 8a4:	eafffff5 	b	880 <__call_exitprocs+0xd8>
 8a8:	e5150084 	ldr	r0, [r5, #-132]	; 0xffffff7c
 8ac:	e1a0e00f 	mov	lr, pc
 8b0:	e12fff13 	bx	r3
 8b4:	eafffff1 	b	880 <__call_exitprocs+0xd8>
 8b8:	e59f2054 	ldr	r2, [pc, #84]	; 914 <__call_exitprocs+0x16c>
 8bc:	e3520000 	cmp	r2, #0
 8c0:	1a000002 	bne	8d0 <__call_exitprocs+0x128>
 8c4:	e28dd014 	add	sp, sp, #20
 8c8:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8cc:	e12fff1e 	bx	lr
 8d0:	e5983004 	ldr	r3, [r8, #4]
 8d4:	e3530000 	cmp	r3, #0
 8d8:	e5983000 	ldr	r3, [r8]
 8dc:	1a000008 	bne	904 <__call_exitprocs+0x15c>
 8e0:	e3530000 	cmp	r3, #0
 8e4:	0a000006 	beq	904 <__call_exitprocs+0x15c>
 8e8:	e1a00008 	mov	r0, r8
 8ec:	e58b3000 	str	r3, [r11]
 8f0:	e320f000 	nop	{0}
 8f4:	e59b8000 	ldr	r8, [r11]
 8f8:	e3580000 	cmp	r8, #0
 8fc:	1affffb8 	bne	7e4 <__call_exitprocs+0x3c>
 900:	eaffffef 	b	8c4 <__call_exitprocs+0x11c>
 904:	e1a0b008 	mov	r11, r8
 908:	e1a08003 	mov	r8, r3
 90c:	eafffff9 	b	8f8 <__call_exitprocs+0x150>
 910:	00000b84 	.word	0x00000b84
 914:	00000000 	.word	0x00000000

00000918 <register_fini>:
 918:	e92d4008 	push	{r3, lr}
 91c:	e59f3010 	ldr	r3, [pc, #16]	; 934 <register_fini+0x1c>
 920:	e3530000 	cmp	r3, #0
 924:	159f000c 	ldrne	r0, [pc, #12]	; 938 <register_fini+0x20>
 928:	1bffff10 	blne	570 <atexit>
 92c:	e8bd4008 	pop	{r3, lr}
 930:	e12fff1e 	bx	lr
 934:	00000bac 	.word	0x00000bac
 938:	0000093c 	.word	0x0000093c

0000093c <__libc_fini_array>:
 93c:	e92d4038 	push	{r3, r4, r5, lr}
 940:	e59f5034 	ldr	r5, [pc, #52]	; 97c <__libc_fini_array+0x40>
 944:	e59f4034 	ldr	r4, [pc, #52]	; 980 <__libc_fini_array+0x44>
 948:	e0654004 	rsb	r4, r5, r4
 94c:	e1b04144 	asrs	r4, r4, #2
 950:	10855104 	addne	r5, r5, r4, lsl #2
 954:	0a000005 	beq	970 <__libc_fini_array+0x34>
 958:	e2444001 	sub	r4, r4, #1
 95c:	e5353004 	ldr	r3, [r5, #-4]!
 960:	e1a0e00f 	mov	lr, pc
 964:	e12fff13 	bx	r3
 968:	e3540000 	cmp	r4, #0
 96c:	1afffff9 	bne	958 <__libc_fini_array+0x1c>
 970:	eb00008d 	bl	bac <__libc_fini>
 974:	e8bd4038 	pop	{r3, r4, r5, lr}
 978:	e12fff1e 	bx	lr
 97c:	00000bc4 	.word	0x00000bc4
 980:	00000bc8 	.word	0x00000bc8

00000984 <__cs3_premain>:
 984:	e92d4008 	push	{r3, lr}
 988:	eb00001d 	bl	a04 <__libc_init_array>
 98c:	e59f3030 	ldr	r3, [pc, #48]	; 9c4 <__cs3_premain+0x40>
 990:	e3530000 	cmp	r3, #0
 994:	15930000 	ldrne	r0, [r3]
 998:	01a00003 	moveq	r0, r3
 99c:	e59f3024 	ldr	r3, [pc, #36]	; 9c8 <__cs3_premain+0x44>
 9a0:	e3530000 	cmp	r3, #0
 9a4:	15931000 	ldrne	r1, [r3]
 9a8:	01a01003 	moveq	r1, r3
 9ac:	e3a02000 	mov	r2, #0
 9b0:	ebfffe74 	bl	388 <main>
 9b4:	e59f3010 	ldr	r3, [pc, #16]	; 9cc <__cs3_premain+0x48>
 9b8:	e3530000 	cmp	r3, #0
 9bc:	1bfffef3 	blne	590 <exit>
 9c0:	eafffffe 	b	9c0 <__cs3_premain+0x3c>
	...
 9cc:	00000590 	.word	0x00000590

000009d0 <_exit>:
 9d0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 9d4:	e3a00018 	mov	r0, #24
 9d8:	e59f1004 	ldr	r1, [pc, #4]	; 9e4 <_exit+0x14>
 9dc:	ef123456 	svc	0x00123456
 9e0:	eafffffe 	b	9e0 <_exit+0x10>
 9e4:	00020026 	.word	0x00020026

000009e8 <__cs3_isr_interrupt>:
 9e8:	eafffffe 	b	9e8 <__cs3_isr_interrupt>

000009ec <__cs3_isr_undef>:
 9ec:	eafffffe 	b	9ec <__cs3_isr_undef>

000009f0 <__cs3_isr_swi>:
 9f0:	eafffffe 	b	9f0 <__cs3_isr_swi>

000009f4 <__cs3_isr_pabort>:
 9f4:	eafffffe 	b	9f4 <__cs3_isr_pabort>

000009f8 <__cs3_isr_dabort>:
 9f8:	eafffffe 	b	9f8 <__cs3_isr_dabort>

000009fc <__cs3_isr_irq>:
 9fc:	eafffffe 	b	9fc <__cs3_isr_irq>

00000a00 <__cs3_isr_fiq>:
 a00:	eafffffe 	b	a00 <__cs3_isr_fiq>

00000a04 <__libc_init_array>:
 a04:	e92d4070 	push	{r4, r5, r6, lr}
 a08:	e59f506c 	ldr	r5, [pc, #108]	; a7c <__libc_init_array+0x78>
 a0c:	e59f606c 	ldr	r6, [pc, #108]	; a80 <__libc_init_array+0x7c>
 a10:	e0656006 	rsb	r6, r5, r6
 a14:	e1b06146 	asrs	r6, r6, #2
 a18:	12455004 	subne	r5, r5, #4
 a1c:	13a04000 	movne	r4, #0
 a20:	0a000005 	beq	a3c <__libc_init_array+0x38>
 a24:	e2844001 	add	r4, r4, #1
 a28:	e5b53004 	ldr	r3, [r5, #4]!
 a2c:	e1a0e00f 	mov	lr, pc
 a30:	e12fff13 	bx	r3
 a34:	e1560004 	cmp	r6, r4
 a38:	1afffff9 	bne	a24 <__libc_init_array+0x20>
 a3c:	e59f5040 	ldr	r5, [pc, #64]	; a84 <__libc_init_array+0x80>
 a40:	e59f6040 	ldr	r6, [pc, #64]	; a88 <__libc_init_array+0x84>
 a44:	e0656006 	rsb	r6, r5, r6
 a48:	eb00004f 	bl	b8c <_init>
 a4c:	e1b06146 	asrs	r6, r6, #2
 a50:	12455004 	subne	r5, r5, #4
 a54:	13a04000 	movne	r4, #0
 a58:	0a000005 	beq	a74 <__libc_init_array+0x70>
 a5c:	e2844001 	add	r4, r4, #1
 a60:	e5b53004 	ldr	r3, [r5, #4]!
 a64:	e1a0e00f 	mov	lr, pc
 a68:	e12fff13 	bx	r3
 a6c:	e1560004 	cmp	r6, r4
 a70:	1afffff9 	bne	a5c <__libc_init_array+0x58>
 a74:	e8bd4070 	pop	{r4, r5, r6, lr}
 a78:	e12fff1e 	bx	lr
 a7c:	00000ba4 	.word	0x00000ba4
 a80:	00000ba4 	.word	0x00000ba4
 a84:	00000ba4 	.word	0x00000ba4
 a88:	00000bac 	.word	0x00000bac

Disassembly of section .rodata:

00000a90 <_global_impure_ptr-0xf4>:
 a90:	20202020 	.word	0x20202020
 a94:	20202020 	.word	0x20202020
 a98:	20202020 	.word	0x20202020
 a9c:	20202020 	.word	0x20202020
 aa0:	20202020 	.word	0x20202020
 aa4:	20202020 	.word	0x20202020
 aa8:	20202020 	.word	0x20202020
 aac:	20202020 	.word	0x20202020
 ab0:	20202020 	.word	0x20202020
 ab4:	20202020 	.word	0x20202020
 ab8:	20202020 	.word	0x20202020
 abc:	20202020 	.word	0x20202020
 ac0:	20202020 	.word	0x20202020
 ac4:	20202020 	.word	0x20202020
 ac8:	20202020 	.word	0x20202020
 acc:	20202020 	.word	0x20202020
 ad0:	00202020 	.word	0x00202020
 ad4:	20202020 	.word	0x20202020
 ad8:	20202020 	.word	0x20202020
 adc:	20202020 	.word	0x20202020
 ae0:	20202020 	.word	0x20202020
 ae4:	20202020 	.word	0x20202020
 ae8:	20202020 	.word	0x20202020
 aec:	20202020 	.word	0x20202020
 af0:	20202020 	.word	0x20202020
 af4:	20202020 	.word	0x20202020
 af8:	20202020 	.word	0x20202020
 afc:	20202020 	.word	0x20202020
 b00:	20202020 	.word	0x20202020
 b04:	20202020 	.word	0x20202020
 b08:	20202020 	.word	0x20202020
 b0c:	20202020 	.word	0x20202020
 b10:	20202020 	.word	0x20202020
 b14:	20202020 	.word	0x20202020
 b18:	00202020 	.word	0x00202020
 b1c:	6c6c6548 	.word	0x6c6c6548
 b20:	6f57206f 	.word	0x6f57206f
 b24:	00646c72 	.word	0x00646c72
	...
 b50:	6e20794d 	.word	0x6e20794d
 b54:	20656d61 	.word	0x20656d61
 b58:	54207369 	.word	0x54207369
 b5c:	204d4145 	.word	0x204d4145
 b60:	6d204f42 	.word	0x6d204f42
 b64:	61662079 	.word	0x61662079
 b68:	69726f76 	.word	0x69726f76
 b6c:	63206574 	.word	0x63206574
 b70:	7373616c 	.word	0x7373616c
 b74:	20736920 	.word	0x20736920
 b78:	31434545 	.word	0x31434545
 b7c:	002e3138 	.word	0x002e3138
 b80:	00000000 	.word	0x00000000

00000b84 <_global_impure_ptr>:
 b84:	00000bf0 00000043                       ....C...

00000b8c <_init>:
 b8c:	e1a0c00d 	mov	r12, sp
 b90:	e92ddff8 	push	{r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, lr, pc}
 b94:	e24cb004 	sub	r11, r12, #4
 b98:	e24bd028 	sub	sp, r11, #40	; 0x28
 b9c:	e89d6ff0 	ldm	sp, {r4, r5, r6, r7, r8, r9, r10, r11, sp, lr}
 ba0:	e12fff1e 	bx	lr

00000ba4 <__init_array_start>:
 ba4:	00000918 	.word	0x00000918

00000ba8 <__frame_dummy_init_array_entry>:
 ba8:	00000200                                ....

00000bac <__libc_fini>:
 bac:	e1a0c00d 	mov	r12, sp
 bb0:	e92ddff8 	push	{r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, lr, pc}
 bb4:	e24cb004 	sub	r11, r12, #4
 bb8:	e24bd028 	sub	sp, r11, #40	; 0x28
 bbc:	e89d6ff0 	ldm	sp, {r4, r5, r6, r7, r8, r9, r10, r11, sp, lr}
 bc0:	e12fff1e 	bx	lr

00000bc4 <__fini_array_start>:
 bc4:	000001bc 	.word	0x000001bc

00000bc8 <__cs3_regions>:
	...
 bd4:	00001020 	.word	0x00001020
 bd8:	00000020 	.word	0x00000020

00000bdc <__cs3_regions_end>:
 bdc:	00000000 	.word	0x00000000
